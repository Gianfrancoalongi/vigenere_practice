We know this is a Vigenere cipher
Therefore we can try to use Kasiski examination to find possible key lengths.
This means finding the distances at which segments repeat and their frequency


    $> bash find_repetition_distances  | sort -g | head -n 16
    distance repetitions
	    8     1
	   14     2
	   16     9
	   20    13
	   28     1
	   32     8
	   37     1
	   40    10
	   44     4
	   48     9
	   52    13
	   55     1
	   60    12
	   62     2
	   68     4
     
Next, check the factors of all the most common distances 20 40 52 60

    $> for d in 20 40 52 60; do bash distance_factors ${d}; done
    1 2 4 5 10
    1 2 4 5 8 10 20
    1 2 4 13 26
    1 2 3 4 5 6 10 12 15 20 30

Set intersection hints at 1,2,4 as 1 and 2 seems way too short, our guess will be 4.
So, we write the cipher as matrix with 4 columns.
 
    $> bash columnize_text 4

Now we wish to mount an automated search based on the key being 4 letters long.
Each column is extracted and considered as one string; this string is then attacked 
through 26 possible caesar rotations; and the most plausible character frequencey to 
match English is chosen as the key for that column.

English frequency (in %)
a 8.167
b 1.492	
c 2.782	
d 4.253	
e 12.702	
f 2.228	
g 2.015	
h 6.094	
i 6.966	
j 0.153	
k 0.772	
l 4.025	
m 2.406	
n 6.749	
o 7.507	
p 1.929	
q 0.095	
r 5.987	
s 6.327	
t 9.056	
u 2.758	
v 0.978	
w 2.360	
x 0.150	
y 1.974	
z 0.074	

    $> bash attack_columnized cipher_columnized_4.txt
    Row 1  8  i 20.984870
    Row 2 19  t 21.103050
    Row 3 25  z 20.803890
    Row 4  2  c 21.203860

