We know this is a Vigenere cipher
Therefore we can try to use Kasiski examination to find possible key lengths.
This means finding different recurring sequences
  grep -m 1 -o --color -P '(\w{1}).*\g1' cipher.txt gives 1 hits
  grep -m 1 -o --color -P '(\w{2}).*\g1' cipher.txt gives 2 hits
  grep -m 1 -o --color -P '(\w{3}).*\g1' cipher.txt gives 3 hits
  grep -m 1 -o --color -P '(\w{4}).*\g1' cipher.txt gives 1 hits
  grep -m 1 -o --color -P '(\w{5}).*\g1' cipher.txt gives 1 hits
  grep -m 1 -o --color -P '(\w{6}).*\g1' cipher.txt gives 0 hits
Based on length of word 3
  jfh recurrs with distance 39
  wwu recurrs with distance 12 <--- this seems nice
  hsq recurrs with distance 25
Factors for 12
  1 2 3 4 6 12
Guess is that key is of length 3,4,6 since 1,2 are too short, 12 is too long
Now we wish to mount an automated search based on the keys being 3, 4 or 6.
This is done by constructing 3 different text alignmnets
  3split.txt
  4split.txt
  6split.txt
Using columns of 3, 4 and 6 letters wide (without spaces).
Next, for every split file
      each column is extracted and considered as one string 
      this string is then attacked through 26 possible caesar rotations, 
      	   and the most plausible character frequencey to match Engilsh is chosen

 cat solution.txt | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | tr -d ' \.,*()0123456789{}' | awk -f frequency.awk
